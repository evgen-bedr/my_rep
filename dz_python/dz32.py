# 1. Напишите генератор, который будет принимать на вход числа и возвращать их сумму.
# Генератор должен использовать инструкцию yield для возврата текущей суммы и должен продолжать
# принимать новые числа для добавления к сумме. Если генератор получает на вход число 0,
# он должен прекращать работу и вернуть окончательную сумму. Напишите программу,
# которая будет использовать этот генератор для пошагового расчета суммы чисел, вводимых пользователем.
#
# Пример вывода:
# Введите числа для суммирования (0 для окончания):
# Введите число: 3
# Текущая сумма: 3
# Введите число: 5
# Текущая сумма: 8
# Введите число: 2
# Текущая сумма: 10
# Введите число: 0
# Текущая сумма: 10

def my_gen():
    total = 0
    while True:
        n = yield total
        if n == 0:
            return total
        total += n


print('Введите числа для суммирования (0 для окончания):')
gen = my_gen()
next(gen)

while True:
    try:
        n = int(input('Введите число: '))
        current_sum = gen.send(n)
        print(f'Текущая сумма: {current_sum}')
    except Exception:
        print(f'Текущая сумма: {current_sum}')
        break


# 2. Напишите генератор, который будет генерировать арифметическую прогрессию

def gen_a(a, d):
    while True:
        yield a
        a += d


num1 = 2
num2 = 8
num3 = 3

gen = gen_a(num1, num3)

for _ in range(num2):
    print(next(gen))
